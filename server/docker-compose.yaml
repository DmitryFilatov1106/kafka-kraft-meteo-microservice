version: '3.9'

# docker network create kafka_net --driver bridge
networks:
  net:
    name: kafka_net
    external: true

volumes:
  db-data:
    driver: local
  broker-data-1:
    driver: local
  broker-data-2:
    driver: local
  broker-data-3:
    driver: local
  debezium-data:
    driver: local

services:
  server:
    build:
      context: .
    image: server-app-kafka:1.2
    container_name: server-app
    networks:
      - net
    depends_on:
      - dbase
      - broker-1
      - broker-2
      - broker-3
    env_file:
      - .env
    ports:
      - '8082:8082'

  broker-1:
    image: bitnami/kafka:3.3.2
    container_name: broker-1
    networks:
      - net
    restart: always
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=bPtwYD1iRSioJoTXSwQXqg
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@broker-1:9091,2@broker-2:9091,3@broker-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker-1:9090,EXTERNAL://${HOSTNAME:-localhost}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAMES=PLAINTEXT
    volumes:
      - broker-data-1:/bitnami/kafka

  broker-2:
    image: bitnami/kafka:3.3.2
    container_name: broker-2
    networks:
      - net
    restart: always
    ports:
      - 9094:9094
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=bPtwYD1iRSioJoTXSwQXqg
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@broker-1:9091,2@broker-2:9091,3@broker-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker-2:9090,EXTERNAL://${HOSTNAME:-localhost}:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAMES=PLAINTEXT
    volumes:
      - broker-data-2:/bitnami/kafka

  broker-3:
    image: bitnami/kafka:3.3.2
    container_name: broker-3
    networks:
      - net
    restart: always
    ports:
      - 9096:9096
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=bPtwYD1iRSioJoTXSwQXqg
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@broker-1:9091,2@broker-2:9091,3@broker-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker-3:9090,EXTERNAL://${HOSTNAME:-localhost}:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAMES=PLAINTEXT
    volumes:
      - broker-data-3:/bitnami/kafka

  dbase:
    image: 'postgres:15.3-alpine'
    container_name: server-db
    networks:
      - net
    env_file:
      - .env
    ports:
      - '5433:5432'
    command: ["postgres", "-c", "wal_level=logical"]
    volumes:
      - db-data:/var/lib/postgresql/data

  debezium:
    image: debezium/connect:2.4.0.Final
    container_name: server-debezium
    networks:
      - net
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - dbase
    environment:
      - BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - GROUP_ID=${DEBEZIUM_GROUP_ID}
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    volumes:
      - debezium-data:/debezium/data
      - ./debezium-connector/:/on-startup/
#    command: ["cd /on-startup; sh run.sh"]

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: server-kafka-ui
    networks:
      - net
    depends_on:
      - broker-1
    ports:
      - 8084:8080
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=broker-1:9090
      - KAFKA_CLUSTERS_0_NAME=meteo
